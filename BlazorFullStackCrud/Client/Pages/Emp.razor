@page "/emp"
@page "/emp/{id:int}"
@inject IEmployeeService EmployeeService

@if (Id == null)
{
    <PageTitle>Create a new Employee</PageTitle>
    <h3>Create a new Employee</h3>
}
else
{
    <PageTitle>Edit @employee.position</PageTitle>
    <h3>Edit @employee.position</h3>
}

<EditForm Model="employee" OnSubmit="HandleSubmit">
    <div>
        <label for="firstname">First Name</label>
        <InputText id="firstname" @bind-Value="employee.FirstName" class="form-control"></InputText>
    </div>
    <div>
        <label for="lastname">Last Name</label>
        <InputText id="lastname" @bind-Value="employee.LastName" class="form-control"></InputText>
    </div>
    <div>
        <label for="empname">Employee Position</label>
        <InputText id="empname" @bind-Value="employee.position" class="form-control"></InputText>
    </div>
    <div>
        <label>Department</label><br />
        <InputSelect @bind-Value="employee.DepartmentId" class="form-select">
            @foreach (var emp in EmployeeService.Departments)
            {
                <option value="@emp.DepartmentId">@emp.Name</option>
            }
        </InputSelect>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">@btnText</button>
    <button type="button" class="btn btn-danger" @onclick="DeleteEmployee">Delete Employee</button>
</EditForm>

@code {
    [Parameter]
    public int? Id { get; set; }

    string btnText = string.Empty;

    Employee employee = new Employee { Department = new Department() };

    protected override async Task OnInitializedAsync()
    {
        btnText = Id == null ? "Save New Employee" : "Update Employee";
        await EmployeeService.GetDepartments();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Id == null)
        {
            employee.Department = EmployeeService.Departments[0];
            employee.DepartmentId = employee.Department.DepartmentId;
        }
        else
        {
            employee = await EmployeeService.GetSingleEmployee((int)Id);
        }
    }

    async Task HandleSubmit()
    {
        if (Id == null)
        {
            await EmployeeService.CreateEmployee(employee);
        }
        else
        {
            await EmployeeService.UpdateEmployee(employee);
        }
    }

    async Task DeleteEmployee()
    {
        await EmployeeService.DeleteEmployee(employee.Id);
    }
}
